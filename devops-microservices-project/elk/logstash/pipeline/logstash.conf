input {
  beats {
    port => 5044
  }
  
  file {
    path => "/user_logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
  
  file {
    path => "/product_logs/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
  }
}

filter {
  # Parse Docker logs
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
      skip_on_invalid_json => true
    }
  }
  
  # Add service identification
  if "user_service" in [container] {
    mutate {
      add_field => { "service" => "user_service" }
    }
  }
  
  if "product_service" in [container] {
    mutate {
      add_field => { "service" => "product_service" }
    }
  }
  
  # Parse timestamp
  date {
    match => [ "timestamp", "ISO8601" ]
    target => "@timestamp"
  }
  
  # Parse log levels
  grok {
    match => { "message" => "%{LOGLEVEL:log_level}" }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "agent", "ecs", "host", "input", "log", "tags" ]
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "microservices-logs-%{+YYYY.MM.dd}"
  }
  
  # For debugging
  stdout { codec => rubydebug }
}